,EventTemplate,Occurrences
0,<*>,232
1,"setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>), dockedStackBounds=Rect(<*>)",182
2,represents the name of the variable that is being set to,181
3,and,134
4,has a template of,85
5,"So, the variable",85
6,", and",77
7,is replaced with the value,70
8,updateDimmedActivatedHideSensitive overlap=<*>,65
9,"userActivityNoUpdateLocked: {eventTime=event, flags=uid}",48
10,is a placeholder for the actual value of the,42
11,shouldBlockLocation running <*>,37
12,"variable, which in this case is",33
13,"Here,",33
14,"{Acquiring suspend blocker ""PowerManagerService.WakeLocks""}",33
15,suspendAutohide <*>,23
16,"cancelNotification,index=-<*>",20
17,"acquire lock=<*> flags=<*> tag=""<*>"" name=""<*>"" ws=<*> uid=<*> pid=<*>",18
18,: The value of the,18
19,querySoundEffectsEnabled...,17
20,cancelAutohide=<*>,15
21,notifyUiVisibilityChanged:vis=<*> SystemUiVisibility=<*>,15
22,"userActivityNoUpdateLocked: {eventTime=eventTime, event=event, flags=flags, uid=uid}",15
23,: The value of,14
24,and separated by commas,14
25,*,14
26,: The bounds of the fullscreen stack. *,14
27,"release:lock=<*> flg=<*> tag=""<*>"" name=""<*>"" ws=<*> uid=<*> pid=<*>",13
28,"setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect({<*>, <*> - <*>, <*>}) dockedStackBounds=Rect({<*>, <*> - <*>, <*>})",13
29,,12
30,Where,12
31,closeQs = <*>,12
32,"""isMusicActive...""",12
33,Note that some of the variables have a placeholder value enclosed in curly braces,12
34,is a placeholder for the value of the variable,11
35,": The package name of the application that sent the notification (in this case, ""com.tencent.mobileqq""). *",11
36,"resumeSuspendedAutohide={vis, mask, oldVal, newVal, diff, fullscreenStackVis, dockedStackVis, fullscreenStackBounds, dockedStackBounds}",10
37,removeNotificationChildren={vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*>},10
38,The variables that can be extracted from this template are: *,9
39,cancelNotificationWithTag pid=<*> uid=<*> tag=<*> pkg=<*> id=<*>,9
40,getRecentTasks: topActivity=<*>,8
41,:,7
42,"Skipping, withExcluded: <*>, tr.intent:Intent { act=<*> dat=file:///storage/emulated/0/Tencent/QQfile_recv/b.apk typ=application/vnd.android.package-archive flg=0x10800000 cmp=com.android.packageinstaller/.PackageInstallerActivity (has extras) }",7
43,: A bitmask representing the type of tasks to retrieve (<*> in this case). *,7
44,: The value of the key that was intercepted before queuing. *,6
45,": The user ID associated with the event. In this case, it's",6
46,: This variable represents the value of the,6
47,"Here, the variables are identified by their names in the log message, and the values are enclosed in curly braces",6
48,logNotificationVisibilityChanges runInThread start <*> <*> <*> <*> <*> <*> <*> <*> <*>,6
49,changeInFocus=<*> layoutBegin=<*>,6
50,": The value of this variable is <*>, which represents the user ID associated with this log message. *",6
51,is a variable that is being abstracted using the,6
52,"field is also replaced with its hexadecimal representation,",6
53,represents a placeholder for the value of the,5
54,with a value of,5
55,"acquire lock=<*> flags=<*> tag=""<*>"" name=""<*>"" ws={<*>} uid=<*> pid=<*>",5
56,: The value of this variable is,5
57,: The value of this variable is <*>. *,5
58,": This is the main message being logged. It contains information about the cause of the layout change (i.e., ""change in focus""). *",5
59,parameter is also,4
60,"Note that some of the variables have a placeholder value, which is denoted by the backticks (",4
61,": A boolean indicating whether the event has been canceled or not. In this case, it's set to",4
62,: A boolean indicating whether the key is being pressed down (<*>) or released (<*>). *,4
63,mHeadsUpExistenceChangedRunnable,4
64,"property, which will be passed as an argument to the template. The rest of the template is composed of placeholders for various properties and values, which will be replaced with the actual values when the template is rendered. These placeholders are enclosed in curly braces",4
65,variable contains the value,4
66,", which corresponds to the value",4
67,visible=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*> fullscreenStackBounds=Rect(<*>) dockedStackBounds=Rect(<*>),3
68,"acquire lock=<*> flags=<*> tag=""<*>"" name=""<*>"" ws={<*>} pid=<*>",3
69,": This variable represents the word ""in"" in the log message. *",3
70,"cancelNotification,index=<*>",3
71,is a placeholder for the value of the,3
72,: This is the name of the alarm that was received. *,3
73,is a variable that contains the value,3
74,"is the line number of the calling method, and",3
75,is a boolean indicating whether the screenshot is in rotation. *,3
76,getRingerMode...,3
77,variable is,3
78,Skipping AppWindowToken{df0798e token=Token{78af589 ActivityRecord{3b04890 u0 com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity t761}} -- going to hide,2
79,": The value of this variable is an integer representing the user ID associated with this log message (in this case, <*>). *",2
80,"Application requested orientation <*>, got rotation <*> which has compatible metrics.",2
81,Note that the placeholders are enclosed in curly braces,2
82,getRingtonePlayer...,2
83,", which is represented by",2
84,", which is assigned the value",2
85,"onInterceptTouchEvent MotionEvent { action=ACTION_DOWN, actionButton=<*>, id=[<*>]=<*>, x=[<*>]=<*>, y=[<*>]=<*>, toolType=[<*>]=TOOL_TYPE_FINGER, buttonState=<*>, metaState=<*>, flags=0x0, edgeFlags=0x0, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=0x1002 }",2
86,"onInterceptTouchEvent MotionEvent { action={ACTION_UP, ACTION_BUTTON_0}, id[{ID_0=<*>}], x [{X_0=<*>}], y [{Y_0=<*>}], toolType [<*>], buttonState=<*>, metaState=<*>, flags=<*>, edgeFlags=<*>, pointerCount=<*>, historySize=<*>, eventTime=<*>, downTime=<*>, deviceId=<*>, source=<*> }",2
87,: This is the new value of the notification. *,2
88,"cancelNotificationLocked,remove = <*>",2
89,: replaced with,2
90,"{overlapAmount=<*>, previousNotificationEnd=<*>, newYTranslation=-<*>, location=<*>, i=<*>, getTopPadding=<*>, getLocationOnScreen=(-<*>)}",2
91,: The new value of the notification children. *,2
92,placeholder is a 2D bounding rectangle in the format,2
93,is a placeholder for the value of,2
94,handleTimeUpdate { # time update in milliseconds timeUpdate=<*> # current system UI visibility vis=<*> # current system UI mask mask=<*> # previous system UI visibility oldVal=<*> # new system UI visibility newVal=<*> # difference between new and old values diff=<*> # fullscreen stack visibility fullscreenStackVis=<*> # docked stack visibility dockedStackVis=<*> # fullscreen stack bounds fullscreenStackBounds=Rect(<*>) # docked stack bounds dockedStackBounds=Rect(<*>) },2
95,: This is the value of the variable,2
96,is the variable that needs to be replaced with the actual value of,2
97,if the variable is,2
98,"Here, the variables are delimited by backticks (",2
99,": This is the actual text inside the backticks, which is the name of the function (",2
100,disable: <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> <*> >,2
101,{name=com.example.android.notepad/com.example.android.notepad.NoteEditor},2
102,": This is a list of placeholders that can be used to extract the corresponding template. In this case, there is only one placeholder (",2
103,Note that there are placeholders for the following variables: *,2
104,printFreezingDisplayLogsopening app wtoken = <*>,1
105,": The number of system calls made so far. So, the full template would look like this:",1
106,"property, which is also a",1
107,Destroying surface Surface(name=SurfaceView - com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity) called by <*>,1
108,{name=com.tencent.qt.qtl/com.tencent.video.player.activity.PlayerActivity},1
109,in this case). We use,1
110,. So the template of the log message can be written as:,1
111,Screen frozen for +1s0ms due to Window{ca98d5 u0 com.tencent.qt.qtl/com.tencent.qt.qtl.activity.info.NewsDetailXmlActivity},1
112,startAnimation begin=<*>,1
113,startAnimation end,1
114,remove({PendingIntent{19abed0: <*>}) changed bounds; rebatching,1
115,: The value of this placeholder is the user ID of the user who released the object or resource. *,1
116,{activityToken=android.os.BinderProxy@2bd79ce},1
117,": This placeholder represents the y-coordinate of the touch event. In this case, it is",1
118,schedulePeek=<*>,1
119,Note that some of the placeholders have a,1
120,),1
121,: The name of the surface being destroyed. *,1
122,", which is represented by an empty string (",1
123,and separated from the placeholder with a comma,1
124,",",1
125,: A double representing the factor by which the collapse speed should be increased when the view is collapsed. *,1
126,getMode... = <*>,1
127,: The value is <*>. *,1
128,START {act=act flg=flg cmp=cmp uid=uid display=display} from uid on display,1
129,: The class name of the activity. *,1
130,"flingToHeight: <*>=<*>, <*>=<*>, <*>=<*>, <*>=<*>, <*>=<*>",1
131,"is an integer representing the rotation angle (<*> by default) Note that some of these placeholders may not be present in every log message, depending on the specific implementation of the",1
132,": The new value of the notification. So, in this case, the template would be",1
133,: A boolean value indicating whether the animation should be delayed. *,1
134,changeInFocus=<*>,1
135,"variable is replaced by an empty string, since it does not have a corresponding placeholder. Similarly, the",1
136,"disable: {expand, icons*, alerts, system_info*, back, home, recent, clock, navigationbar, search, quick_settings}",1
137,: This is the class name of the object that the log message is related to. *,1
138,: The value of this placeholder is the user ID of the user who released the object. *,1
139,isBluetoothA2dpOn...,1
140,isBluetoothScoOn...,1
141,getMode...,1
142,setSpeakerphoneOn <*>,1
143,setSpeakerphoneOn on=<*>,1
144,: <*> *,1
145,": The tag of the listener associated with the alarm, represented as a <*> value (",1
146,"is the adjustment value, which can be a number or a string representing a specific adjustment (e.g. ""<*>"" in this case). *",1
147,"In this template, the placeholders are denoted by backticks (",1
148,": This is a placeholder for a variable that contains the tag of the listener associated with the alarm (in this case,",1
149,remove({PendingIntent{e4e2534: <*>}}) changed bounds; rebatching,1
150,Unable to start service Intent { act=com.tencent.android.tpush.action.keepalive cmp=com.qqgame.hlddz/com.tencent.android.tpush.service.XGPushService } U=<*>: not found,1
151,abandonAudioFocus { vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> },1
152,"<*>=<*>, <*>=<*>",1
153,"In this template, the variable",1
154,Scheduling restart of crashed service <*> in 1000ms,1
155,"new Process app={ProcessRecord{6eaaf00 <*>:com.tencent.mobileqq:qzone/u0a111}}, name=<*>, euid=<*>",1
156,is the name of the service that is being called. *,1
157,"is a placeholder for the number that appears in the log message, specifically",1
158,enqueueNotificationInternal: pkg=<*> id=<*> notification=<*> pri=<*> contentView=<*> vibrate=<*> sound=<*> tick=<*> defaults=<*> flags=<*> color=<*> vis=<*>,1
159,"field in the log message, which is",1
160,addNotification key=<*> appId=<*> notificationId=<*> oldValue=<*> newValue=<*> diff=<*>,1
161,"field in the template. So, the full template of the log message is:",1
162,": The display number of the device (in this case,",1
163,field in the,1
164,-user);,1
165,"setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect({<*>, <*> - <*>, <*>}) dockedStackBounds=Rect(<*>, <*> - <*>, <*>)",1
166,"is a placeholder for a specific activity name, and",1
167,"is a placeholder for the actual activity name, and",1
168,"setSystemUiVisibility vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect({<*>, <*> - <*>, <*>}), dockedStackBounds=Rect({<*>, <*> - <*>, <*>})",1
169,": The display number of the intent, which is",1
170,value is,1
171,"placeholders, and the values are enclosed in curly braces",1
172,"sending alarm <*> vis=<*> mask=<*> oldVal=<*> newVal=<*> diff=<*> fullscreenStackVis=<*> dockedStackVis=<*>, fullscreenStackBounds=Rect(<*>) dockedStackBounds=Rect(<*>)",1
173,received broadcast android.intent.action.TIME_TICK,1
174,handleTimeUpdate { # time update in milliseconds timeUpdate=<*> # current system UI visibility vis=<*> # current system UI mask mask=<*> # previous system UI visibility oldVal=<*> # new system UI visibility newVal=<*> # difference between new and old values diff=<*> # fullscreen stack visibility fullscreenStackVis=<*> # docked stack visibility dockedStackVis=<*> # fullscreen stack bounds fullscreenStackBounds=<*> # docked stack bounds dockedStackBounds=<*> },1
175,isWiredHeadsetOn=<*>,1
176,is,1
177,updateIsPoweredLocked: wasPowered=<*> mIsPowered=<*> oldPlugType=<*> mPlugType=<*> mBatteryLevel=<*>,1
178,ACTION_BATTERY_CHANGED AMP=<*> Volt=<*>,1
179,is a variable that represents the value of the,1
180,ACTION_BATTERY_CHANGED pluggedType=<*>,1
181,what=<*>,1
182,"In this case, the placeholder is",1
183,: <*>),1
184,: The value of this variable is an integer that represents the user ID associated with the lock. *,1
185,"Here, the variables are denoted by",1
186,"field, which is",1
187,addNotification key=<*> appId=<*> notificationId=<*> oldVal=<*> newVal=<*> diff=<*>,1
188,": The log message payload (in this case, <*>). *",1
189,sending alarm Alarm{type=<*> when=<*> PendingIntent={<*>} repeatInterval=<*> listenerTag=<*>},1
190,: <*> (an integer representing the user ID) *,1
191,": This is the main template, which contains the information about the activity. *",1
192,. *,1
193,"So, the variables that need to be replaced with their values are: *",1
